// This file was generated by counterfeiter
package fake_proxyconf_reader

import (
	"sync"

	"github.com/cloudfoundry-incubator/ltc/droplet_runner"
)

type FakeProxyConfReader struct {
	ProxyConfStub        func() (droplet_runner.ProxyConf, error)
	proxyConfMutex       sync.RWMutex
	proxyConfArgsForCall []struct{}
	proxyConfReturns     struct {
		result1 droplet_runner.ProxyConf
		result2 error
	}
}

func (fake *FakeProxyConfReader) ProxyConf() (droplet_runner.ProxyConf, error) {
	fake.proxyConfMutex.Lock()
	fake.proxyConfArgsForCall = append(fake.proxyConfArgsForCall, struct{}{})
	fake.proxyConfMutex.Unlock()
	if fake.ProxyConfStub != nil {
		return fake.ProxyConfStub()
	} else {
		return fake.proxyConfReturns.result1, fake.proxyConfReturns.result2
	}
}

func (fake *FakeProxyConfReader) ProxyConfCallCount() int {
	fake.proxyConfMutex.RLock()
	defer fake.proxyConfMutex.RUnlock()
	return len(fake.proxyConfArgsForCall)
}

func (fake *FakeProxyConfReader) ProxyConfReturns(result1 droplet_runner.ProxyConf, result2 error) {
	fake.ProxyConfStub = nil
	fake.proxyConfReturns = struct {
		result1 droplet_runner.ProxyConf
		result2 error
	}{result1, result2}
}

var _ droplet_runner.ProxyConfReader = new(FakeProxyConfReader)
