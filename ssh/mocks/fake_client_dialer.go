// This file was generated by counterfeiter
package mocks

import (
	"sync"

	config_package "github.com/cloudfoundry-incubator/ltc/config"
	"github.com/cloudfoundry-incubator/ltc/ssh"
)

type FakeClientDialer struct {
	DialStub        func(appName string, instanceIndex int, config *config_package.Config) (ssh.Client, error)
	dialMutex       sync.RWMutex
	dialArgsForCall []struct {
		appName       string
		instanceIndex int
		config        *config_package.Config
	}
	dialReturns struct {
		result1 ssh.Client
		result2 error
	}
}

func (fake *FakeClientDialer) Dial(appName string, instanceIndex int, config *config_package.Config) (ssh.Client, error) {
	fake.dialMutex.Lock()
	fake.dialArgsForCall = append(fake.dialArgsForCall, struct {
		appName       string
		instanceIndex int
		config        *config_package.Config
	}{appName, instanceIndex, config})
	fake.dialMutex.Unlock()
	if fake.DialStub != nil {
		return fake.DialStub(appName, instanceIndex, config)
	} else {
		return fake.dialReturns.result1, fake.dialReturns.result2
	}
}

func (fake *FakeClientDialer) DialCallCount() int {
	fake.dialMutex.RLock()
	defer fake.dialMutex.RUnlock()
	return len(fake.dialArgsForCall)
}

func (fake *FakeClientDialer) DialArgsForCall(i int) (string, int, *config_package.Config) {
	fake.dialMutex.RLock()
	defer fake.dialMutex.RUnlock()
	return fake.dialArgsForCall[i].appName, fake.dialArgsForCall[i].instanceIndex, fake.dialArgsForCall[i].config
}

func (fake *FakeClientDialer) DialReturns(result1 ssh.Client, result2 error) {
	fake.DialStub = nil
	fake.dialReturns = struct {
		result1 ssh.Client
		result2 error
	}{result1, result2}
}

var _ ssh.ClientDialer = new(FakeClientDialer)
